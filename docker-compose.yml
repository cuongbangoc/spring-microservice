version: "2"

services:
#    api:
#        container_name: api
#        build: ./
#        environment:
#            PROJECT_NAME: api
#            NODE_ENV: dev_docker_local
#        # volumes:
#        #     - .:/build
#        ports:
#            - '5000:5000'
#        command: "pm2 start -x --no-daemon app.js"
#        depends_on:
#            - postgresql
#        networks:
#            - front-net
#            - back-net
#
#    postgresql:
#        image: postgres:alpine
#        container_name: postgresql
#        environment:
#            POSTGRES_USER: demo
#            POSTGRES_PASSWORD: demo123456
#            POSTGRES_DB: demo
#            NODE_ENV: dev
#        ports:
#            - '5432:5432'
#        volumes:
#            - "./docker/docker_data/postgresql:/var/lib/postgresql/data"
#            - "/usr/share/zoneinfo:/usr/share/zoneinfo"
#            - "./sql/init_db_demo.sql:/sql/init_db_demo.sql"
#        networks:
#            - back-net
#
#    rabbitmq:
#        image: rabbitmq:3-management
#        container_name: rabbitmq
#        ports:
#            - '5672:5672'
#            - '15672:15672'
#        volumes:
#            - ./docker/docker_data/rabbitmq:/var/lib/rabbitmq
#        networks:
#            - back-net
#
#    elasticsearch:
#        image: elasticsearch
#        container_name: elasticsearch
#        ports:
#            - '9200:9200'
#            - '9300:9300'
#        volumes:
#            - ./docker/docker_data/elasticsearch/data:/usr/share/elasticsearch/data
#        networks:
#            - back-net
#
    mysql:
        image: mysql:5.7
        container_name: mysql
        ports:
            - '3306:3306'
        environment:
            MYSQL_DATABASE: demo
            MYSQL_ROOT_PASSWORD: 12345678
            MYSQL_USER: cuongbn
            MYSQL_PASSWORD: cuongbn
        volumes:
            - ./docker/docker_data/mysql:/var/lib/mysql
        networks:
            - back-net

    mongodb:
        container_name: mongodb
        image: mongo:3.2
        volumes:
            - ./docker/docker_data/mongodb:/data/db
        ports:
            - '27017:27017'
        networks:
            - back-net

#    redis:
#        image: redis:alpine
#        container_name: redis
#        ports:
#            - '6379:6379'
#        networks:
#            - back-net

networks:
#    front-net:
    back-net: